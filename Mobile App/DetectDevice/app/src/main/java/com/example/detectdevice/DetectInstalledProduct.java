package com.example.detectdevice;


import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.os.Build;
import java.util.ArrayList;
import java.util.List;

public class DetectInstalledProduct {

    // 1. Returns a list of all installed packages on the device
    public static List<PackageInfo> getAllInstalledPackages(PackageManager packageManager) {
        return packageManager.getInstalledPackages(0);
    }

    // 2.  Returns a list of all installed system packages on the device
    static List<PackageInfo> getSystemInstalledPackages(PackageManager packageManager) {
        List<PackageInfo> packages = new ArrayList<>();
        for (PackageInfo packageInfo : getAllInstalledPackages(packageManager)) {
            if ((packageInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
                packages.add(packageInfo);
            }
        }
        return packages;
    }

    //3. Returns a list of all installed non-system packages on the device
    public static List<PackageInfo> getUserInstalledPackages(PackageManager packageManager) {
        List<PackageInfo> packages = new ArrayList<>();
        for (PackageInfo packageInfo : getAllInstalledPackages(packageManager)) {
            if ((packageInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) == 0) {
                packages.add(packageInfo);
            }
        }
        return packages;
    }

    //4. Returns the version name of a package given its package name
    public static String getVersionName(PackageManager packageManager, String packageName) {
        try {
            return packageManager.getPackageInfo(packageName, 0).versionName;
        } catch (PackageManager.NameNotFoundException e) {
            return null;
        }
    }

    //5. Returns the name of the device's default web browser
    public static String getDefaultBrowserName(PackageManager packageManager) {
        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.google.com"));
        ResolveInfo resolveInfo = packageManager.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
        return resolveInfo.activityInfo.packageName;
    }


}

